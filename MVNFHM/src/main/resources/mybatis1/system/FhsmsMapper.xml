<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="FhsmsMapper">
	
	<!--表名 -->
	<sql id="tableName">
		SYS_FHSMS
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		CONTENT,	
		TYPE,	
		TO_USERNAME,	
		FROM_USERNAME,	
		SEND_TIME,	
		STATUS,	
		FHSMS_ID,
		SANME_ID
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{CONTENT},	
		#{TYPE},	
		#{TO_USERNAME},	
		#{FROM_USERNAME},	
		#{SEND_TIME},	
		#{STATUS},	
		#{FHSMS_ID},
		#{SANME_ID}
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
	<include refid="Field"></include>
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			FHSMS_ID = #{FHSMS_ID}
	</delete>
	
	<!-- 修改 状态-->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			STATUS = '1'
		where 
		SANME_ID = #{SANME_ID}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			FHSMS_ID = #{FHSMS_ID}
	</select>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where
			FROM_USERNAME = #{pd.FROM_USERNAME}
		and
			TYPE = #{pd.TYPE}
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
					FROM_USERNAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					TO_USERNAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					CONTENT LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
				)
		</if>
		<if test="pd.lastLoginStart!=null and pd.lastLoginStart!=''"><!-- 开始时间检索 -->
			and SEND_TIME &gt;= #{pd.lastLoginStart} 
		</if>
		<if test="pd.lastLoginEnd!=null and pd.lastLoginEnd!=''"><!-- 结束时间检索 -->
			and SEND_TIME &lt;= #{pd.lastLoginEnd} 
		</if>
		<if test="pd.STATUS != null and pd.STATUS != ''"><!-- 状态检索 -->
			and STATUS = #{pd.STATUS} 
		</if>
		order by STATUS desc
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
	</select>
	
	<!-- 获取未读总数 -->
	<select id="findFhsmsCount" parameterType="String" resultType="pd">
		select 
			count(FHSMS_ID) fhsmsCount
		from 
		<include refid="tableName"></include>
		where 
			STATUS = '2'
		and
			TYPE = '1'
		and
			FROM_USERNAME = #{USERNAME} 
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			FHSMS_ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	<select id="smslistPage" parameterType="page" resultType="pd">
		select
		id,
		name,
		b_note_url,
		comment,
		contact,
		status
	  from 
		b_note
	</select>
	
		<!-- 删除-->
	<delete id="deleteSms" parameterType="pd">
		delete from b_note
		where 
			id = #{id}
	</delete>
	
	<!-- 修改 状态-->
	<update id="editSms" parameterType="pd">
		update
		 b_note
		set 
			STATUS = #{STATUS},
			name = #{NAME},
			b_note_url = #{B_NOTE_URL},
			contact = #{CONTACT}
		where 
		id = #{id}
	</update>
	
	<!-- 新增-->
	<insert id="saveSms" parameterType="pd">
		insert into 
			b_note
		(
			name,
			b_note_url,
			comment,
			contact,
			status
		) values (
			#{NAME},	
		#{B_NOTE_URL},	
		null,	
		#{CONTACT},	
		#{STATUS}
		)
	</insert>
	
	<select id="findBySmsId" parameterType="pd" resultType="pd">
		select 
			name,
			b_note_url,
			comment,
			contact,
			status
		from 
			b_note
		where 
			id = #{id}
	</select>
	<!-- 短信配送信息查询 -->
	<select id="getSmsDestinationlistPage" parameterType="page" resultType="pd">
		select
		a.id,
		a.device_type,
		a.fault_type,
		c.name as gateway_fault_name,
		d.name as node_fault_name,
		location,
		send_to_admin,
		a.send_to_person,
		b.name AS person_name
	  from 
		b_sms_destination a
		Left join sys_user b
		on a.send_to_person = b.USER_ID
		LEFT JOIN b_status c ON 
		c.value = a.fault_type and c.b_status_main_id = 3
		LEFT JOIN b_status d ON 
		d.value = a.fault_type and d.b_status_main_id = 4
	  where b_note_id = #{pd.b_note_id}
	</select>
	
	<!-- 删除-->
	<delete id="deleteSmsDest" parameterType="pd">
		delete from b_sms_destination
		where 
			id = #{id}
	</delete>
	
	<select id="findSmsSettingInfoById" parameterType="pd" resultType="pd">
		select 
			id,
			device_type,
			fault_type,
			location,
			send_to_admin,
			send_to_person
		from 
			b_sms_destination
		where 
			id = #{id}
	</select>
	
		<!-- 修改 状态-->
	<update id="editSmsDest" parameterType="pd">
		update
		 b_sms_destination
		set 
			<!-- b_note_id = #{b_note_id}, -->
			device_type = #{device_type},
			fault_type = #{fault_type},
			location = #{location},
			send_to_admin = #{send_to_admin},
			send_to_person = #{send_to_person}
		where 
		id = #{id}
	</update>
	
		<!-- 新增-->
	<insert id="insertSmsDest" parameterType="pd">
		insert into 
			b_sms_destination
		(
			b_note_id,
			device_type,
			fault_type,
			location,
			send_to_admin,
			send_to_person
		) values (
			#{b_note_id},	
			#{device_type},	
			#{fault_type},	
			#{location},	
			#{send_to_admin},
			#{send_to_person}
		)
	</insert>
	
	<select id="getSmsDestCount" parameterType="pd" resultType="Integer">
		select 
			count(*) count
		from 
			b_sms_destination
		where 
			device_type = #{device_type} and
			fault_type = #{fault_type} and
			location = #{location}
	</select>
	<!-- fh313596790qq(青苔) -->
</mapper>